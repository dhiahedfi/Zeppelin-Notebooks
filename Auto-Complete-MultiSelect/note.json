{
  "paragraphs": [
    {
      "text": "%spark\n\n/*\n Data Ingestion Paragraph\n Auto-complete list will be automatically updated when selectList change on back-end\n*/\nz.angularUnbind(\"selectList\")\nz.angularUnbind(\"selections\")\nz.angularBind(\"selectList\", Array(\"Apache\",\"Zeppelin\",\"Moon\", \"Damien\", \"Anthony\", \"Sejun\"))\nz.angularBind(\"selections\", Array())",
      "dateUpdated": "Aug 26, 2016 8:57:26 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472169413072_610126469",
      "id": "20160126-111652_1391278108",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Aug 26, 2016 8:56:53 AM",
      "dateStarted": "Aug 26, 2016 8:57:26 AM",
      "dateFinished": "Aug 26, 2016 8:58:13 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%angular\n\n    \u003cselect id\u003d\"tokenize\" multiple\u003d\"multiple\" class\u003d\"tokenize-sample\"\u003e\n        \u003coption ng-repeat\u003d\"name in selectList\" value\u003d\"{{name}}\"\u003e{{name}}\u003c/option\u003e\n    \u003c/select\u003e\n    \n    \u003cstyle\u003e\n    #tokenize, .Tokenize, .Tokenize .TokensContainer {\n        width: 100%;\n    }\n    \u003c/style\u003e\n    \n    \u003cscript\u003e\n    \n    //\n    // LOADING THE COMPONENT\n    //\n    \n    // Include the component css\n    var fileref\u003ddocument.createElement(\"link\");\n    fileref.setAttribute(\"rel\", \"stylesheet\");\n    fileref.setAttribute(\"type\", \"text/css\");\n    fileref.setAttribute(\"href\", \u0027//cdn.rawgit.com/zellerda/Tokenize/master/jquery.tokenize.css\u0027);\n    if (typeof fileref!\u003d\"undefined\")\n        document.getElementsByTagName(\"head\")[0].appendChild(fileref);\n    \n    // Remove some CSS from Zeppelin so that the component renders well\n    var id \u003d document.getElementById(\"tokenize\").parentElement.getAttribute(\u0027id\u0027);\n    document.getElementById(id).style.overflow \u003d \"visible\";\n    \n    // Load the js and render the component after\n    jQuery.when(\n        // Load the js\n        jQuery.getScript(\u0027//cdn.rawgit.com/zellerda/Tokenize/master/jquery.tokenize.js\u0027),\n        jQuery(\"#tokenize\").ready,\n        jQuery.Deferred(function( deferred ){\n            jQuery( deferred.resolve );\n        })\n    ).done(function(){\n        // Init the component\n        var el \u003d jQuery(\u0027#tokenize\u0027).tokenize({\n          onAddToken: updateSelected,\n          onRemoveToken: updateSelected\n        });\n        \n        // Show already selected values as token on start\n        var selected \u003d angular.element(\u0027#tokenize\u0027).scope().selections;\n        for (var i \u003d 0; i \u003c selected.length; i++) {\n          el.tokenAdd(selected[i], selected[i]);   \n        }\n    });\n    \n    function updateSelected(value, text, e) {\n      var selected \u003d jQuery(\u0027#tokenize\u0027).tokenize().toArray();\n      \n      // Take the component tokens and set them in selections\n      angular.element(\u0027#tokenize\u0027).scope().selections \u003d selected;\n    }\n    \n    \u003c/script\u003e",
      "dateUpdated": "Aug 26, 2016 9:41:44 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472169413068_599353500",
      "id": "20160126-101946_1530650725",
      "result": {
        "code": "SUCCESS",
        "type": "ANGULAR",
        "msg": "\u003cselect id\u003d\"tokenize\" multiple\u003d\"multiple\" class\u003d\"tokenize-sample\"\u003e\n        \u003coption ng-repeat\u003d\"name in selectList\" value\u003d\"{{name}}\"\u003e{{name}}\u003c/option\u003e\n    \u003c/select\u003e\n    \n    \u003cstyle\u003e\n    #tokenize, .Tokenize, .Tokenize .TokensContainer {\n        width: 100%;\n    }\n    \u003c/style\u003e\n    \n    \u003cscript\u003e\n    \n    //\n    // LOADING THE COMPONENT\n    //\n    \n    // Include the component css\n    var fileref\u003ddocument.createElement(\"link\");\n    fileref.setAttribute(\"rel\", \"stylesheet\");\n    fileref.setAttribute(\"type\", \"text/css\");\n    fileref.setAttribute(\"href\", \u0027//cdn.rawgit.com/zellerda/Tokenize/master/jquery.tokenize.css\u0027);\n    if (typeof fileref!\u003d\"undefined\")\n        document.getElementsByTagName(\"head\")[0].appendChild(fileref);\n    \n    // Remove some CSS from Zeppelin so that the component renders well\n    var id \u003d document.getElementById(\"tokenize\").parentElement.getAttribute(\u0027id\u0027);\n    document.getElementById(id).style.overflow \u003d \"visible\";\n    \n    // Load the js and render the component after\n    jQuery.when(\n        // Load the js\n        jQuery.getScript(\u0027//cdn.rawgit.com/zellerda/Tokenize/master/jquery.tokenize.js\u0027),\n        jQuery(\"#tokenize\").ready,\n        jQuery.Deferred(function( deferred ){\n            jQuery( deferred.resolve );\n        })\n    ).done(function(){\n        // Init the component\n        var el \u003d jQuery(\u0027#tokenize\u0027).tokenize({\n          onAddToken: updateSelected,\n          onRemoveToken: updateSelected\n        });\n        \n        // Show already selected values as token on start\n        var selected \u003d angular.element(\u0027#tokenize\u0027).scope().selections;\n        for (var i \u003d 0; i \u003c selected.length; i++) {\n          el.tokenAdd(selected[i], selected[i]);   \n        }\n    });\n    \n    function updateSelected(value, text, e) {\n      var selected \u003d jQuery(\u0027#tokenize\u0027).tokenize().toArray();\n      \n      // Take the component tokens and set them in selections\n      angular.element(\u0027#tokenize\u0027).scope().selections \u003d selected;\n    }\n    \n    \u003c/script\u003e"
      },
      "dateCreated": "Aug 26, 2016 8:56:53 AM",
      "dateStarted": "Aug 26, 2016 9:41:44 AM",
      "dateFinished": "Aug 26, 2016 9:41:44 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "z.angular(\"selections\")",
      "dateUpdated": "Aug 26, 2016 9:42:03 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472169413072_610126469",
      "id": "20160126-111707_2078222307",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nres7: Object \u003d Array(Moon, Damien)\n"
      },
      "dateCreated": "Aug 26, 2016 8:56:53 AM",
      "dateStarted": "Aug 26, 2016 9:42:03 AM",
      "dateFinished": "Aug 26, 2016 9:42:04 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Aug 26, 2016 8:57:08 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1472169413073_609741720",
      "id": "20160126-114134_1046110991",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Aug 26, 2016 8:56:53 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Auto-Complete Component",
  "id": "2BUHPHC5K",
  "lastReplName": {
    "value": "angular"
  },
  "angularObjects": {
    "2BUMHU2NS:shared_process": [],
    "2BUYKC58W:shared_process": [],
    "2BUBYUHTZ:shared_process": [],
    "2BTDV77R7:shared_process": [],
    "2BUAPXX77:shared_process": [],
    "2BVZJGTUN:shared_process": [],
    "2BWTJ537C:shared_process": [],
    "2BTBGT8G9:shared_process": [],
    "2BWD22TAT:shared_process": [],
    "2BV236YEG:shared_process": [],
    "2BV1UGM6V:shared_process": [
      {
        "name": "selectList",
        "object": [
          "Apache",
          "Zeppelin",
          "Moon",
          "Damien",
          "Anthony",
          "Sejun"
        ],
        "noteId": "2BUHPHC5K"
      },
      {
        "name": "selections",
        "object": [
          "Moon",
          "Damien"
        ],
        "noteId": "2BUHPHC5K"
      }
    ],
    "2BX1AGKHF:shared_process": [],
    "2BWHZ2AK5:shared_process": [],
    "2BUEXKUE1:shared_process": [],
    "2BU8KTA7C:shared_process": [],
    "2BVFBYYW4:shared_process": [],
    "2BWG5JEAV:shared_process": [],
    "2BWX6Q96N:shared_process": []
  },
  "config": {},
  "info": {}
}